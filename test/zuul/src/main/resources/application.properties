
server.port = 1111
spring.application.name=zuul

zuul.host.connect-timeout-millis = 60000
zuul.host.socket-timeout-millis = 60000


dispatch-server-host = localhost

zuul.routes.system.path = /system/**
zuul.routes.system.serviceId = system
system.ribbon.listOfServers = http://${dispatch-server-host}:7777,http://${dispatch-server-host}:7778, http://${dispatch-server-host}:7779, http://${dispatch-server-host}:7780
#system.ribbon.listOfServers = http://${dispatch-server-host}:7777,http://${dispatch-server-host}:7778

hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds = 5000

ribbon.eureka.enabled = false

# 对当前实例的重试次数
system.ribbon.MaxAutoRetries=1
# 切换实例的重试次数
system.ribbon.MaxAutoRetriesNextServer=3
# 请求的连接时间
system.ribbon.ConnecTimeOut=3000
# 对所有操作都进行重试
system.ribbon.OkToRetryOnAllOperations=true
system.ribbon.ServerListRefreshInterval=2000
system.ribbon.ConnectTimeout = 60000
system.ribbon.ReadTimeout = 60000
system.ribbon.EnablePrimeConnections=true 
system.ribbon.NIWSServerListClassName=com.netflix.loadbalancer.ConfigurationBasedServerList
system.ribbon.NFLoadBalancerRuleClassName = com.netflix.loadbalancer.AvailabilityFilteringRule



#ribbon.eager-load.enabled=true
#ribbon.eager-load.clients=hello-service, user-service